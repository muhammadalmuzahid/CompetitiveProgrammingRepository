----------------------------------------
	(A / B) % M = ? 
----------------------------------------
(A / B) % M = ((A % M) * (B^-1 % M)) % M;

Now what is B^-1 = ?
B^-1 = B^(M - 2) % M

To, find A^b we can use binary exponential (logn).

----------------------------------------------------
		CODE [MOD can be other number]
---------------------------------------------------
const long long MOD = 1e9 + 7;
long long binpow(long long a, long long b) {
    long long res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a) % MOD;
        a = (a * a) % MOD;
        b >>= 1;
    }
    return res;
}

int main()
{
    long long a, b, ans;
    cin >> a >> b;
    
    b = binpow(b, (MOD-2));
    ans = ((a % MOD) * (b % MOD)) % MOD;
}